@model JobBoardMVC.Models.JobLocationViewModel

@{
    ViewBag.Title = "Admin";
    Layout = "../Shared/_Layout.cshtml";

    @* Global variables *@
    int jobCount = ViewBag.Counts;
    int jobsPerPage = 20; @* This var should always equal the JS var with the same name *@
    int maxPagesDisplayed = 5; @* This var should always equal the JS var with the same name *@
}

@* *@
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
<link href="../Content/Site.css" rel="stylesheet">

<div id="search-wrapper" style="width:400px; margin-right:auto; margin-left:auto; text-align: center;">
    <input id="TitleSearch" type="text" name="jobTitleString" class="form-control" placeholder="Search for companies or jobs..." />
</div>

<div style="margin-top: 15px; text-align: center; padding-bottom: 15px;">
    <input type="button" class="btn btn-success" value="Create New Job" onclick="window.open('../Jobs/Create')">
</div>


<table class="table table-hover table-responsive tablesorter" id="job-listings-table">
    <thead>
        @* Populating table headers *@
        <tr>
            <th>
                Edit
            </th>
   @*     <th>
        Details
    </th>*@    
            <th>
                Delete
            </th>
            <th>
                @Html.DisplayNameFor(model => model.jobs[0].Company)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.jobs[0].DatePosted)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.jobs[0].JobID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.jobs[0].JobTitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.jobs[0].Location)
            </th>
        </tr>
    </thead>
    <tbody>
        @* Populating table data *@
        @if (Model.jobs.Any())
        {
            foreach (var item in Model.jobs)
            {
                <tr> 
                    <td>
                        <input type="button" class="btn btn-primary btn-sm editJobButton" value="Edit" onclick="location.href='@Url.Action("Edit", "Jobs", new { id = item.ID })'">
                    </td>
        @*               <td>
               <input type="button" class="btn btn-info btn-sm" value="Details" onclick="location.href='@Url.Action("Details", "Jobs", new { id = item.ID })'">
    </td> *@    
                    <td>
                        <input type="button" class="btn btn-danger btn-sm" value="Delete" onclick="location.href='@Url.Action("Delete", "Jobs", new { id = item.ID })'">
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Company)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DatePosted)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.JobID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.JobTitle)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Location)
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@* Adds a "Results per page" counter to the bottom of the page *@
@if (jobCount > jobsPerPage)
{
    <div id="paginationContainer">
        <i class="fa fa-angle-double-left fa-2x"></i>
        <ul class="pagination">
            <li class="active paginationLink"><a>1</a></li>
            @for (var i = 2; i <= (jobCount - 1) / jobsPerPage + 1 && i <= maxPagesDisplayed; i++)
            {
                <li class="paginationLink"><a>@i</a></li>
            }
        </ul>
        <i class="fa fa-angle-double-right fa-2x"></i>
        <br />
        Results per page: <select id="jobs-per-page">
            <option value="5">5</option>
            <option value="10" selected="selected">10</option>
            <option value="20">20</option>
            <option value="50">50</option>
            <option value="100">100</option>
        </select>
    </div>
}

<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/tableSorter.js"></script>
<script src="~/Scripts/script.js"></script>

